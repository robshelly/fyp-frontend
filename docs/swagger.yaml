swagger: "2.0"
info:
  version: "1.0.0"
  title: " Backup Test Restoration System"
host: localhost:4000
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /restores:
    get:
      description: Get all recent restore results
      summary: Get Restores
      operationId: GetRestores
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                timestamp:
                  type: integer
                result:
                  type: string
                server:
                  type: string
                file:
                  type: string
            example:
              - id: "1"
                timestamp: 1520114032
                result: SUCCESS
                server: 34.240.194.20
                file: backups.backup.json.gpg
              - id: "2"
                timestamp: 1520114255
                result: FAILURE
                server: ec2-34-240-194-20.eu-west-1.compute.amazonaws.com
                file: backups/backup.sql.gpg
    post:
      description: Run a backup test restoration
      summary: Run Restore
      operationId: RunRestore
      consumes: application/json
      parameters:
        - in: body
          name: Restore
          description: The test restoration to run
          schema:
            type: object
            required:
              - server
              - file
              - dataType
              - decryptKey
            properties:
              server:
                type: string
              file:
                type: string
              dataType:
                type: string
              decryptKey:
                type: string
            example:
              server: "192.168.1.99"
              file: "backups/backup.json.gpg"
              dataType: "json"
              decryptKey: "backups-test"
      responses:
        '200':
           description: The restoration was successfully triggered
        '405':
          description: Invalid input
  /schedules:
    get:
      description: Get a list of scheduled restores
      summary: Get Schedules
      operationId: GetSchedules
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                lastRun:
                  type: integer
                lastResult:
                  type: string
            example:
              - name: "scheduled-backup-one"
                lastRun: 1520114032
                lastResult: SUCCESS 
              - name: "scheduled-backup-two"
                lastRun: 1520114255
                lastResult: FAILURE
    post:
      description: Create a new scheduled restoration
      summary:  Create Schedule
      operationId: CreateSchedule
      consumes: application/json
      parameters:
        - in: body
          name: Restore
          description: The name of the schedule restore
          schema:
            type: object
            required:
              - name
              - server
              - pathToFile
              - dataType
              - decryptKey
              - frequency
            properties:
              name:
                type: string
              server:
                type: string
              pathToFile:
                type: string
              dataType:
                type: string
              decryptKey:
                type: string
            example:
              name: "backup-one"
              server: "192.168.1.99"
              pathToFile: "backup/backup.json.gpg"
              dataType: "json"
              decryptKey: "backupKey1"
              frequency: "0 0 * * 7"
      responses:
        "201":
          description: Schedule successfully created
        "405":
          description: Invalid input
  /schedules/{scheduleName}:
    get:
      description: Get details of a scheduled restore
      summary: Get Schedule
      operationId: GetSchedule
      produces:
        - application/json
      parameters:
        - name: scheduleName
          in: path
          description: The name of the schedule requested
          required: true
          type: string
          example: backup-one
      responses:
        "200":
          description: Success
          schema:
          type: object
          properties:
            name:
              type: string
            server:
              type: string
            pathToFile:
              type: string
            dataType:
              type: string
            decryptKey:
              type: string
            frequency:
              type: string
            tests:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  timestamp:
                    type: integer
                  result:
                    type: string
          example:
            name: "backup-one"
            server: "192.168.1.99"
            pathToFile: "backup/backup.json.gpg"
            dataType: "json"
            decryptKey: "backupKey1"
            frequency: "0 0 * * 7"
            builds:
              - id: "1"
                timestamp: 1520114032
                result: SUCCESS 
              - id: "2"
                timestamp: 1520114255
                result: FAILURE
        "404":
          description: Schedule not found
    post:
      description: Run a scheduled restore immedialtely
      summary: Run Scheduled now
      operationId: RunScheduledRestore
      consumes: application/json
      parameters:
        - name: scheduleName
          in: path
          description: The name schedule to run
          required: true
          type: string
          example: users-backup
      responses:
        '200':
           description: The restoration was successfully triggered
        '404':
          description: Scheduled restore not found
    put:
      description: Update an existing scheduled restoration
      summary:  Update Schedule
      operationId: UpdateSchedule
      consumes: application/json
      parameters:
        - name: scheduleName
          in: path
          description: The name of the scheduled restore
          required: true
          type: string
          example: backup-one
        - in: body
          name: Restore
          description: The name of the schedule restore
          schema:
            type: object
            required:
              - name
              - location
              - file
              - dataType
              - decryptKey
              - frequency
            properties:
              name:
                type: string
              location:
                type: string
              file:
                type: string
              dataType:
                type: string
              decryptKey:
                type: string
            example:
              name: "backup1"
              location: "192.168.99.99"
              file: "backup/backup2"
              dataType: "mysql"
              decryptKey: "backupKey2"
              frequency: "0 0 1 * *"
      responses:
        "200":
          description: Schedule successfully updated
        "404":
          description: Schedule not found
    delete:
      description: Delete a scheduled restoration
      summary:  Delete Schedule
      operationId: DeleteSchedule
      parameters:
        - name: scheduleName
          in: path
          description: The name of the scheduled restore
          required: true
          type: string
          example: backup-one
      responses:
        '200':
          description: The resource was deleted successfully
        "404":
          description: Schedule not found
  /sshKeys:
    get:
      description: Get list of SSH keys for servers
      summary: Get SSH Keys
      operationId: GetSSHKeys
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
            example:
              - backups-server
              - restoration-server
    post:
      description: Add a new SSH key
      operationId: AddSSHKey
      consumes: application/json
      parameters:
        - in: body
          name: Key
          description: The key to create
          schema:
            type: object
            required:
              - name
              - description
              - privateKey
            properties:
              name:
                type: string
              description:
                type: string
              privateKey:
                type: string
            example:
              name: "test-server-key"
              description: "This is the key for some test server"
              privateKey: |
                -----BEGIN RSA PRIVATE KEY-----
                some private key here
                -----END RSA PRIVATE KEY-----
      responses:
        '200':
           description: Key successfully added
        '405':
          description: Invalid input
  /sshKeys/{keyName}:
    delete:
      description: Delete an SSH key
      summary:  Delete SSH Key
      operationId: DeleteSSHKey
      parameters:
        - name: keyName
          in: path
          description: The name of the SSH key
          required: true
          type: string
          example: test-server-key
      responses:
        '200':
          description: The resource was deleted successfully
        "404":
          description: Key not found
  /gpgKeys:
    get:
      description: Get list of GPG decryption leys
      summary: Get GPG Keys
      operationId: GetGPGKeys
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
            example:
              - backup-users
              - backup-products
    post:
      description: Add a new GPG key
      operationId: AddGPGKey
      consumes: application/json
      parameters:
        - in: body
          name: Key
          description: The key to create
          schema:
            type: object
            required:
              - name
              - description
              - username
              - password
              - privateKey
            properties:
              name:
                type: string
              description:
                type: string
              username:
                type: string
              password:
                type: string
              privateKey:
                type: string
            example:
              name: "test-backup-decryption-key"
              description: "This is the key for some test backup"
              username: admin
              password: password
              privateKey: |
                -----BEGIN RSA PRIVATE KEY-----
                some private key here
                -----END RSA PRIVATE KEY-----
      responses:
        '200':
           description: Key successfully added
        '405':
          description: Invalid input
  /gpgKeys/{keyName}:
    delete:
      description: Delete a GPG key
      summary:  Delete GPG Key
      operationId: DeleteGPGKey
      parameters:
        - name: keyName
          in: path
          description: The name of the GPG key
          required: true
          type: string
          example: test-backup-decryption-key
      responses:
        '200':
          description: The resource was deleted successfully
        "404":
          description: Key not found